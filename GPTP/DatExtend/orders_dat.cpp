#include <SCBW/api.h>
#include <hook_tools.h>
#include "datext.h"


namespace {

  // List of address reference replacements.
s32 orders_r[] = {/* label */  0,   0,0,
                  /* weapon */ 0,   0x00437FC9 +2, 0x0046F607 +2, 0x00476D3B +2, 0x00476DA4 +2, 0x00476E14 +2, 0x004772D3 +2, 0x00492254 +2, 0x004C04EB +2, 0,0,
                  /* unk 2 */  0,   0,0,
                  /* unk 3 */  0,   0,0,
                  /* unk 4 */  0,   0x004751E0 +2, 0,0,
                  /* unk 5 */  0,   0,0,
                  /* intercept */ 0,   0x0043BFC4 +2, 0x0043C0DD +2, 0x0043C3ED +2, 0x0043C530 +2, 0x0043C840 +2, 0x0043C8C0 +2, 0x0043D19D +2, 0x0045483D +2, 0x00454A0E +2, 0x0045CFC0 +2, 0x0045D262 +2, 0x0045D3C5 +2, 0x004636E0 +2, 0x00463965 +2, 0x004643BD +2, 0x00465523 +2, 0x004655AD +2, 0x00465643 +2, 0x0046586D +2, 0x00468FC5 +2, 0x0046993E +2, 0x00474836 +2, 0x004750CD +2, 0x0047577D +2, 0x00477A81 +2, 0x0047818E +2, 0x0047B9BF +2, 0x0047BA6D +2, 0x004940AD +2, 0x0049F289 +2, 0x0049FB81 +2, 0x004A2324 +2, 0x004C0DA3 +2, 0x004C0E0D +2, 0x004C0F63 +2, 0x004C0FCD +2, 0x004C11ED +2, 0x004C13DD +2, 0x004C15CD +2, 0x004C1A42 +2, 0x004E40F2 +2, 0x004E736D +2, 0x004E8201 +2, 0x004E9624 +2, 0x004E9714 +2, 0x004E981D +2, 0x004F3D4D +2, 0x00433BD4 +2, 0x00433D7D +2, 0,0,
                  /* unk 7 */     0,   0x004EB07B +2, 0x004EB7F9 +2, 0x004EB8D1 +2, 0,0,
                  /* queued */    0,   0x00475505 +2, 0,0,
                  /* unk 9 */     0,   0x00492D45 +2, 0,0,
                  /* unk 10 */    0,   0x0049AB15 +2, 0,0,
                  /* unk 11 */    0,   0x0047777B +2, 0,0,
                  /* unk 12 */    0,   0,0,
                  /* targeting */ 0,   0x0046F601 +2, 0x00491DD2 +2, 0x00491E39 +2, 0x00492151 +2, 0x0049285E +2, 0x004D8129 +2, 0x004D814B +2, 0,0,
                  /* energy */    0,   0x0046F610 +2, 0x0049227C +2, 0x0049291A +2, 0x0049AB70 +2, 0x0049E1C3 +2, 0x004A11E7 +2, 0,0,
                  /* animation */ 0,   0x00492AE5 +2, 0,0,
                  /* highlight */ 0,   0x00458D57 +4, 0x00458D7C +4, 0x004742D4 +4, 0x00474420 +4, 0x004745B6 +4, 0x00474657 +4, 0,0,
                  /* unk 17 */    0,   0x0046D479 +4, 0x0046D49E +1, 0x0046DC4B +4, 0x0046DD4D +4, 0,
                                  2,   0x004C21B0 +3, 0x004C22AD +3, 0,
                                  14,  0x004C1270 +3, 0x004C1384 +3, 0,
                                  46,  0x004C1080 +3, 0x004C1194 +3, 0,
                                  80,  0x00429523 +3, 0x00429603 +3, 0,
                                  104, 0x004C1460 +3, 0x004C1574 +3, 0,
                                  144, 0x004C168F +3, 0x004C177B +3, 0x004CC48B +3, 0x004CC575 +3, 0,
                                  222, 0x004C1CE0 +3, 0x004C1DFB +3, 0,
                                  ARRAY_END, 0x0046D4B0 +1, 0,
                                  0,
                  /* obscured */  0,  0x0046F639 +2, 0x004F7023 +2, 0,0};

};


namespace DatExt {

  void orders_dat_doPatch(u32 newCount) {
    datTablePatch((DatLoad*)LoadTable::Orders_Dat, orders_r);
  }


  //void orders_dat_unpatch() {
  //}

};